package urmsgui;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static urmsgui.mainForm.students;

/**
 *
 * @author user
 */
public class ResultEntryPanel extends javax.swing.JPanel {

    /**
     * Creates new form ResultEntryPanel
     */
    public ResultEntryPanel() {
        init();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelResultEntry = new javax.swing.JPanel();
        scrollPaneCourseSelector = new javax.swing.JScrollPane();
        listCourses = new javax.swing.JList( new DefaultListModel());
        scrollPaneResultEntry = new javax.swing.JScrollPane();
        tableResultEntry = new javax.swing.JTable();
        jButton15 = new javax.swing.JButton();

        panelResultEntry.setPreferredSize(new java.awt.Dimension(1024, 454));
        panelResultEntry.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                panelResultEntryFocusGained(evt);
            }
        });

        listCourses.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Courses", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N
        listCourses.setModel(modelCourses);
        listCourses.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listCourses.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listCoursesValueChanged(evt);
            }
        });
        scrollPaneCourseSelector.setViewportView(listCourses);

        scrollPaneResultEntry.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Current Trimester Result Entry", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.ABOVE_TOP, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        scrollPaneResultEntry.setEnabled(false);

        tableResultEntry.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tableResultEntry.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "ID", "Mid Marks", "Final Marks", "Other Marks", "Total Marks"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableResultEntry.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableResultEntry.setShowGrid(true);
        tableResultEntry.getTableHeader().setReorderingAllowed(false);
        scrollPaneResultEntry.setViewportView(tableResultEntry);

        jButton15.setText("Update");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelResultEntryLayout = new javax.swing.GroupLayout(panelResultEntry);
        panelResultEntry.setLayout(panelResultEntryLayout);
        panelResultEntryLayout.setHorizontalGroup(
            panelResultEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultEntryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelResultEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelResultEntryLayout.createSequentialGroup()
                        .addComponent(scrollPaneResultEntry, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelResultEntryLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(panelResultEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelResultEntryLayout.createSequentialGroup()
                                .addComponent(jButton15)
                                .addGap(435, 435, 435))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelResultEntryLayout.createSequentialGroup()
                                .addComponent(scrollPaneCourseSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(229, 229, 229))))))
        );
        panelResultEntryLayout.setVerticalGroup(
            panelResultEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelResultEntryLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(scrollPaneCourseSelector, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneResultEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton15)
                .addContainerGap(94, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 976, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelResultEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 976, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 510, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelResultEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void listCoursesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listCoursesValueChanged
        // TODO add your handling code here:
        tableModelResultEntry = (DefaultTableModel) tableResultEntry.getModel();
        populateTable();
    }//GEN-LAST:event_listCoursesValueChanged

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:

        for (int row = 0; row < tableModelResultEntry.getRowCount(); row++) {
            String studentIdFromTable = tableModelResultEntry.getValueAt(row, 1).toString();
            for (var student : students) {
                if (student.getId() == studentIdFromTable) {
                    String selectedCourseCode = listCourses.getSelectedValue();
                    for (var course : student.getCurrentTrimester().getCourses()) {
                        if (course.getCode().equalsIgnoreCase(selectedCourseCode)) {
                            try {
                                course.setMidMarks(Double.parseDouble(tableModelResultEntry.getValueAt(row, 2).toString()));
                                course.setFinalMarks(Double.parseDouble(tableModelResultEntry.getValueAt(row, 3).toString()));
                                course.setOtherMarks(Double.parseDouble(tableModelResultEntry.getValueAt(row, 4).toString()));
                                System.out.println(tableModelResultEntry.getValueAt(row, 2) + " " + tableModelResultEntry.getValueAt(row, 3) + " " + tableModelResultEntry.getValueAt(row, 4));
                            } catch (NumberFormatException e) {
                                JOptionPane.showMessageDialog(tableResultEntry, "Please input only numeric values!");
                            }
                        }
                    }
                    break; // Exit the loop once we've found the correct student
                }
            }
        }

        populateTable();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void panelResultEntryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_panelResultEntryFocusGained

    }//GEN-LAST:event_panelResultEntryFocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton15;
    private javax.swing.JList<String> listCourses;
    private javax.swing.JPanel panelResultEntry;
    private javax.swing.JScrollPane scrollPaneCourseSelector;
    private javax.swing.JScrollPane scrollPaneResultEntry;
    private javax.swing.JTable tableResultEntry;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel tableModelResultEntry;
    DefaultListModel modelCourses;

    @SuppressWarnings("Unchecked")
    private void init() {
        modelCourses = new DefaultListModel();
        for (var x : students) {
            for (var y : x.getCurrentTrimester().getCourses()) {
                if (!modelCourses.contains(y.getCode()))
                    modelCourses.addElement(y.getCode());
            }
        }
    }

    private void populateTable() {
        String courseCode = listCourses.getSelectedValue();
        tableModelResultEntry.setRowCount(0);

        for (var student : students) {
            for (var course : student.getCurrentTrimester().getCourses()) {
                if (course.getCode().equalsIgnoreCase(courseCode)) {
                    Object ob[] = new Object[]{
                        student.getName(),
                        student.getId(),
                        course.getMidMarks(),
                        course.getFinalMarks(),
                        course.getOtherMarks(),
                        course.getMidMarks() + course.getFinalMarks() + course.getOtherMarks()
                    };
                    tableModelResultEntry.addRow(ob);
                    break;
                }
            }
        }
    }
}
